import snowflake.snowpark as snowpark

from snowflake.snowpark.functions import col
import pandas as pd

def main(session: snowpark.Session): 

    dataframe = session.table('public."victims"')
    rejected_victims = session.table('public."REJECTED_VICTIMS"')
    rejected_victims_pd = rejected_victims.to_pandas()
    fixed_table = []
    prev_row = 0
    curr_row = 0
    for index, row in rejected_victims_pd.iterrows():
        if row["CASE #"] == "145; 146":
            continue
        elif ";" in row["CASE #"]:
            case = row["CASE #"].split("; ")
            lastname = row["Shooter Last Name"].split("; ")
            firstname = row["Shooter First Name"].split("; ")
            new_row = rejected_victims_pd.loc[index].to_list()
            new_row[12] = new_row[12][:-2]
            new_row[0], new_row[1], new_row[2] = case[0], lastname[0], firstname[0]
            fixed_table.append(new_row)
            new_row[0], new_row[1], new_row[2] = case[1], lastname[1], firstname[1]
            fixed_table.append(new_row)
        # elif ";" in row["Years Lost"]:
        #     new_row = rejected_victims_pd.loc[index].to_list()
        #     new_row[12] = new_row[12][:-2].replace(";",".")
        #     fixed_table.append(new_row)
        elif row["CASE #"] == '"':
            new_row = rejected_victims_pd.loc[index-1].to_list()
            temp_row = rejected_victims_pd.loc[index].to_list()
            new_row[9], new_row[10], new_row[11], new_row[12] = "former classmate", temp_row[1], temp_row[2], temp_row[3][:-2]
            fixed_table.append(new_row)
        elif row["CASE #"] != "111" and row["CASE #"] != "179":
            new_row = rejected_victims_pd.loc[index].to_list()
            new_row[-1] = new_row[-1][:-2]
            new_row[3] = f'{new_row[3][3:5]}/{new_row[3][0:2]}/{new_row[3][6:10]}'
            fixed_table.append(new_row)
        elif row["CASE #"] == "179":
            new_row = rejected_victims_pd.loc[index].to_list()
            new_row[-1] = new_row[-1][:-2].replace(";", ".")
            fixed_table.append(new_row)
    for i in range(len(fixed_table)):
        for j in range(len(fixed_table[i])):
            if ";" in fixed_table[i][j]:
                fixed_table[i][j]= fixed_table[i][j].replace(";",",")
    # print(fixed_table)
    # py_df = pd_df.values.tolist()
    fixed_df = session.create_dataframe(fixed_table)
    fixed_df.write.mode("append").save_as_table('public."victims"')
    # full_df = dataframe.union(fixed_df)
    # full_df.write.mode("overwrite").save_as_table('public."victims"')
    # print(fixed_table)
    return dataframe
